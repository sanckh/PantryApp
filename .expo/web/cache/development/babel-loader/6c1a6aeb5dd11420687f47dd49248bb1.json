{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Provider } from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { theme } from \"./core/theme\";\nimport GroceryList from \"./navigation/screens/GroceryList\";\nimport Inventory from \"./navigation/screens/Inventory\";\nimport Settings from \"./navigation/screens/Settings\";\nimport StartScreen from \"./navigation/screens/RegisterScreen\";\nimport LoginScreen from \"./navigation/screens/LoginScreen\";\nimport RegisterScreen from \"./navigation/screens/RegisterScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nfunction Home() {\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: 'Grocery',\n      component: GroceryList\n    }), _jsx(Tab.Screen, {\n      name: 'Inventory',\n      component: Inventory\n    }), _jsx(Tab.Screen, {\n      name: 'Settings',\n      component: Settings\n    })]\n  });\n}\n\nexport default function App() {\n  return _jsx(Provider, {\n    theme: theme,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"StartScreen\",\n        screenOption: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"StartScreen\",\n          component: StartScreen\n        }), _jsx(Stack.Screen, {\n          name: \"LoginScreen\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"RegisterScreen\",\n          component: RegisterScreen\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","Provider","NavigationContainer","createStackNavigator","createBottomTabNavigator","theme","GroceryList","Inventory","Settings","StartScreen","LoginScreen","RegisterScreen","Tab","Stack","Home","App","headerShown"],"sources":["C:/Programming/Pantry App/App.js"],"sourcesContent":["import * as React from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport { Provider } from 'react-native-paper'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'; \r\nimport { theme } from './core/theme';\r\n\r\n//screens\r\nimport GroceryList from './navigation/screens/GroceryList';\r\nimport Inventory from './navigation/screens/Inventory';\r\nimport Settings from './navigation/screens/Settings';\r\nimport StartScreen from './navigation/screens/RegisterScreen';\r\nimport LoginScreen from './navigation/screens/LoginScreen';\r\nimport RegisterScreen from './navigation/screens/RegisterScreen';\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\n  function Home() {\r\n    return(\r\n      <Tab.Navigator>\r\n            <Tab.Screen name={'Grocery'} component={GroceryList} />\r\n            <Tab.Screen name={'Inventory'} component={Inventory} />\r\n            <Tab.Screen name={'Settings'} component={Settings} />\r\n        </Tab.Navigator>\r\n    )\r\n  }\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider theme={theme}>\r\n        <NavigationContainer>\r\n        <Stack.Navigator\r\n        initialRouteName = \"StartScreen\"\r\n        screenOption = {{\r\n          headerShown: false,\r\n        }}\r\n        >\r\n          <Stack.Screen name=\"StartScreen\" component={StartScreen} />\r\n          <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\r\n          <Stack.Screen name=\"RegisterScreen\" component={RegisterScreen} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </Provider> \r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,KAAT;AAGA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;;;AAGA,IAAMC,GAAG,GAAGR,wBAAwB,EAApC;AACA,IAAMS,KAAK,GAAGV,oBAAoB,EAAlC;;AAEE,SAASW,IAAT,GAAgB;EACd,OACE,MAAC,GAAD,CAAK,SAAL;IAAA,WACM,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAE,SAAlB;MAA6B,SAAS,EAAER;IAAxC,EADN,EAEM,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAE,WAAlB;MAA+B,SAAS,EAAEC;IAA1C,EAFN,EAGM,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAE,UAAlB;MAA8B,SAAS,EAAEC;IAAzC,EAHN;EAAA,EADF;AAOD;;AAEH,eAAe,SAASO,GAAT,GAAe;EAC5B,OACE,KAAC,QAAD;IAAU,KAAK,EAAEV,KAAjB;IAAA,UACI,KAAC,mBAAD;MAAA,UACA,MAAC,KAAD,CAAO,SAAP;QACA,gBAAgB,EAAG,aADnB;QAEA,YAAY,EAAI;UACdW,WAAW,EAAE;QADC,CAFhB;QAAA,WAME,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,aAAnB;UAAiC,SAAS,EAAEP;QAA5C,EANF,EAOE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,aAAnB;UAAiC,SAAS,EAAEC;QAA5C,EAPF,EAQE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,gBAAnB;UAAoC,SAAS,EAAEC;QAA/C,EARF;MAAA;IADA;EADJ,EADF;AAgBD"},"metadata":{},"sourceType":"module"}