{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Provider } from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { theme } from \"./core/theme\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport GroceryList from \"./navigation/screens/GroceryList\";\nimport Inventory from \"./navigation/screens/Inventory\";\nimport Settings from \"./navigation/screens/Settings\";\nimport StartScreen from \"./navigation/screens/StartScreen\";\nimport LoginScreen from \"./navigation/screens/LoginScreen\";\nimport RegisterScreen from \"./navigation/screens/RegisterScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar settingsName = 'Settings';\nvar inventoryName = 'Inventory';\nvar groceryName = 'Grocery';\nvar Tab = createMaterialBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nfunction Home() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          var rn = route.name;\n\n          if (rn === groceryName) {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (rn === inventoryName) {\n            iconName = focused ? 'fast-food' : 'fast-food-outline';\n          } else if (rn === settingsName) {\n            iconName = focused ? 'settings' : 'settings-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: 30,\n            color: color\n          });\n        },\n        tabBarStyle: {\n          padding: 0,\n          margin: 8,\n          height: 60,\n          borderRadius: 50,\n          borderWidth: 0,\n          borderColor: '#000000',\n          position: 'absolute',\n          shadowRadius: 1,\n          shadowOpacity: 50\n        },\n        tabBarLabel: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: 'Grocery',\n      component: GroceryList\n    }), _jsx(Tab.Screen, {\n      name: 'Inventory',\n      component: Inventory\n    }), _jsx(Tab.Screen, {\n      name: 'Settings',\n      component: Settings\n    })]\n  });\n}\n\nexport default function App() {\n  return _jsx(Provider, {\n    theme: theme,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"Home\",\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"StartScreen\",\n          component: StartScreen\n        }), _jsx(Stack.Screen, {\n          name: \"LoginScreen\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"RegisterScreen\",\n          component: RegisterScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","Provider","NavigationContainer","createStackNavigator","createBottomTabNavigator","createMaterialBottomTabNavigator","theme","Ionicons","GroceryList","Inventory","Settings","StartScreen","LoginScreen","RegisterScreen","settingsName","inventoryName","groceryName","Tab","Stack","Home","route","tabBarIcon","focused","color","size","iconName","rn","name","tabBarStyle","padding","margin","height","borderRadius","borderWidth","borderColor","position","shadowRadius","shadowOpacity","tabBarLabel","App","headerShown"],"sources":["C:/Programming/Pantry App/PantryApp/App.js"],"sourcesContent":["import * as React from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport { Provider } from 'react-native-paper'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'; \r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs'\r\nimport { theme } from './core/theme';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons'\r\n// import 'react-native-gesture-handler';\r\n\r\n\r\n\r\n//screens\r\nimport GroceryList from './navigation/screens/GroceryList';\r\nimport Inventory from './navigation/screens/Inventory';\r\nimport Settings from './navigation/screens/Settings';\r\nimport StartScreen from './navigation/screens/StartScreen';\r\nimport LoginScreen from './navigation/screens/LoginScreen';\r\nimport RegisterScreen from './navigation/screens/RegisterScreen';\r\n\r\n\r\nconst settingsName = 'Settings';\r\nconst inventoryName = 'Inventory';\r\nconst groceryName = 'Grocery';\r\n\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\n  function Home() {\r\n    return(\r\n      <Tab.Navigator\r\n          screenOptions={({route}) => ({\r\n              tabBarIcon: ({focused, color, size}) => {\r\n                  let iconName;\r\n                  let rn = route.name;\r\n\r\n                  if (rn === groceryName)\r\n                  {\r\n                      iconName = focused ? 'list' : 'list-outline';\r\n                  }\r\n                  else if (rn === inventoryName)\r\n                  {\r\n                      iconName = focused ? 'fast-food' : 'fast-food-outline'\r\n                  }\r\n                  else if (rn === settingsName)\r\n                  {\r\n                      iconName = focused ? 'settings' : 'settings-outline'\r\n                  }\r\n                  return <Ionicons name={iconName} size={30} color={color}/>\r\n              },\r\n              tabBarStyle:\r\n                  {\r\n                      padding: 0,\r\n                      margin: 8,\r\n                      height: 60,\r\n                      borderRadius: 50,\r\n                      borderWidth: 0,\r\n                      borderColor: '#000000',\r\n                      position: 'absolute',\r\n                      shadowRadius: 1,\r\n                      shadowOpacity: 50\r\n\r\n                  },\r\n              tabBarLabel: false, //can add or remove the label\r\n          })}>\r\n            <Tab.Screen name={'Grocery'} component={GroceryList} />\r\n            <Tab.Screen name={'Inventory'} component={Inventory} />\r\n            <Tab.Screen name={'Settings'} component={Settings} />\r\n        </Tab.Navigator>\r\n    )\r\n  }\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider theme={theme}>\r\n        <NavigationContainer>\r\n        <Stack.Navigator\r\n        initialRouteName = \"Home\"\r\n        screenOptions = {{\r\n          headerShown: false,\r\n        }}\r\n        >\r\n          <Stack.Screen name=\"StartScreen\" component={StartScreen} />\r\n          <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\r\n          <Stack.Screen name=\"RegisterScreen\" component={RegisterScreen} />\r\n          <Stack.Screen name=\"Home\" component={Home}/>\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </Provider> \r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}