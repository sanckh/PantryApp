{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../../components/Background\";\nimport Logo from \"../../components/Logo\";\nimport Header from \"../../components/Header\";\nimport Button from \"../../components/Button\";\nimport TextInput from \"../../components/TextInput\";\nimport BackButton from \"../../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError || nameError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Dashboard'\n      }]\n    });\n  };\n\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: navigation.goBack\n    }), _jsx(Logo, {}), _jsx(Header, {\n      children: \"Create Account\"\n    }), _jsx(TextInput, {\n      label: \"Name\",\n      returnKeyType: \"next\",\n      value: name.value,\n      onChangeText: function onChangeText(text) {\n        return setName({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!name.error,\n      errorText: name.error\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onSignUpPressed,\n      style: {\n        marginTop: 24\n      },\n      children: \"Sign Up\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        children: \"Already have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.replace('LoginScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Login\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","RegisterScreen","navigation","value","error","name","setName","email","setEmail","password","setPassword","onSignUpPressed","nameError","emailError","passwordError","reset","index","routes","goBack","text","marginTop","styles","row","replace","link","StyleSheet","create","flexDirection","fontWeight","color","colors","primary"],"sources":["C:/Programming/Pantry App/navigation/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../../components/Background'\r\nimport Logo from '../../components/Logo'\r\nimport Header from '../../components/Header'\r\nimport Button from '../../components/Button'\r\nimport TextInput from '../../components/TextInput'\r\nimport BackButton from '../../components/BackButton'\r\nimport { theme } from '../core/theme'\r\nimport { emailValidator } from '../helpers/emailValidator'\r\nimport { passwordValidator } from '../helpers/passwordValidator'\r\nimport { nameValidator } from '../helpers/nameValidator'\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [name, setName] = useState({ value: '', error: '' })\r\n  const [email, setEmail] = useState({ value: '', error: '' })\r\n  const [password, setPassword] = useState({ value: '', error: '' })\r\n\r\n  const onSignUpPressed = () => {\r\n    const nameError = nameValidator(name.value)\r\n    const emailError = emailValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    if (emailError || passwordError || nameError) {\r\n      setName({ ...name, error: nameError })\r\n      setEmail({ ...email, error: emailError })\r\n      setPassword({ ...password, error: passwordError })\r\n      return\r\n    }\r\n    navigation.reset({\r\n      index: 0,\r\n      routes: [{ name: 'Dashboard' }],\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Background>\r\n      <BackButton goBack={navigation.goBack} />\r\n      <Logo />\r\n      <Header>Create Account</Header>\r\n      <TextInput\r\n        label=\"Name\"\r\n        returnKeyType=\"next\"\r\n        value={name.value}\r\n        onChangeText={(text) => setName({ value: text, error: '' })}\r\n        error={!!name.error}\r\n        errorText={name.error}\r\n      />\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={onSignUpPressed}\r\n        style={{ marginTop: 24 }}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Already have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\r\n          <Text style={styles.link}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}