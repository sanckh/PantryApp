{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport utils from \"../utils\";\nimport styles from \"../styling\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ColorFillNavigationTab = function (_Component) {\n  _inherits(ColorFillNavigationTab, _Component);\n\n  var _super = _createSuper(ColorFillNavigationTab);\n\n  function ColorFillNavigationTab(props) {\n    var _this;\n\n    _classCallCheck(this, ColorFillNavigationTab);\n\n    _this = _super.call(this, props);\n\n    _this.animateX = function () {\n      _this.translateXValue.setValue(0);\n\n      _this.animateColor.setValue(0);\n\n      Animated.parallel([Animated.spring(_this.translateXValue, {\n        toValue: 5,\n        friction: 2,\n        useNativeDriver: true,\n        easing: Easing.linear\n      }), Animated.timing(_this.animateColor, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n        easing: Easing.linear\n      })]).start();\n    };\n\n    _this.state = {\n      containerColor: _this.props.activeBackgroundColor.Home,\n      prevColor: ''\n    };\n    _this.translateXValue = new Animated.Value(0);\n    _this.animateColor = new Animated.Value(1);\n    return _this;\n  }\n\n  _createClass(ColorFillNavigationTab, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.animateX();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          navigation = _this$props.navigation,\n          renderIcon = _this$props.renderIcon,\n          onTabPress = _this$props.onTabPress,\n          onTabLongPress = _this$props.onTabLongPress,\n          activeBackgroundColor = _this$props.activeBackgroundColor,\n          activeTintColor = _this$props.activeTintColor,\n          inactiveTintColor = _this$props.inactiveTintColor,\n          numOfTabs = _this$props.numOfTabs,\n          tabBarHeight = _this$props.tabBarHeight;\n      var _navigation$state = navigation.state,\n          routes = _navigation$state.routes,\n          activeRouteIndex = _navigation$state.index;\n\n      var _utils = utils(numOfTabs),\n          tabWidth = _utils.tabWidth,\n          Scaler = _utils.Scaler,\n          windowWidth = _utils.windowWidth;\n\n      return _jsx(View, {\n        style: [styles.container, {\n          backgroundColor: this.state.prevColor,\n          height: tabBarHeight || 70\n        }],\n        children: routes.map(function (route, routeIndex) {\n          var isRouteActive = routeIndex === activeRouteIndex;\n          var tintColor = isRouteActive ? activeTintColor || '#000000' : inactiveTintColor || 'grey';\n          return _jsxs(View, {\n            style: {\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: [isRouteActive && _jsx(Animated.View, {\n              style: {\n                borderRadius: 50,\n                height: tabBarHeight || 70,\n                zIndex: -1,\n                width: windowWidth * 2,\n                position: 'absolute',\n                backgroundColor: _this2.state.containerColor,\n                transform: [{\n                  scaleX: _this2.animateColor\n                }]\n              }\n            }), _jsx(TouchableOpacity, {\n              style: {\n                width: tabWidth,\n                alignItems: 'center',\n                justifyContent: \"center\"\n              },\n              onPress: function onPress() {\n                _this2.setState({\n                  prevColor: _this2.state.containerColor\n                });\n\n                _this2.setState({\n                  containerColor: activeBackgroundColor[route.key]\n                });\n\n                onTabPress({\n                  route: route\n                });\n              },\n              onLongPress: function onLongPress() {\n                _this2.setState({\n                  prevColor: _this2.state.containerColor\n                });\n\n                _this2.setState({\n                  containerColor: activeBackgroundColor[route.key]\n                });\n\n                onTabLongPress({\n                  route: route\n                });\n              },\n              children: _jsx(Scaler, {\n                pose: isRouteActive ? \"active\" : \"inactive\",\n                children: _jsx(Animated.View, {\n                  style: isRouteActive && {\n                    transform: [{\n                      translateX: _this2.translateXValue\n                    }]\n                  },\n                  children: renderIcon({\n                    route: route,\n                    focused: isRouteActive,\n                    tintColor: tintColor\n                  })\n                })\n              })\n            })]\n          }, routeIndex);\n        })\n      });\n    }\n  }]);\n\n  return ColorFillNavigationTab;\n}(Component);\n\nexport default ColorFillNavigationTab;","map":{"version":3,"names":["React","Component","utils","styles","ColorFillNavigationTab","props","animateX","translateXValue","setValue","animateColor","Animated","parallel","spring","toValue","friction","useNativeDriver","easing","Easing","linear","timing","duration","start","state","containerColor","activeBackgroundColor","Home","prevColor","Value","prevProps","navigation","renderIcon","onTabPress","onTabLongPress","activeTintColor","inactiveTintColor","numOfTabs","tabBarHeight","routes","activeRouteIndex","index","tabWidth","Scaler","windowWidth","container","backgroundColor","height","map","route","routeIndex","isRouteActive","tintColor","justifyContent","alignItems","borderRadius","zIndex","width","position","transform","scaleX","setState","key","translateX","focused"],"sources":["C:/Programming/Pantry App/node_modules/react-native-custom-navigation-tabs/src/TabsContainer/ColorFillNavigationTab.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { View, TouchableOpacity, Animated, Easing } from 'react-native'\n\nimport utils from '../utils'\nimport styles from '../styling'\n\nclass ColorFillNavigationTab extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      containerColor: this.props.activeBackgroundColor.Home,\n      prevColor: ''\n    }\n    this.translateXValue = new Animated.Value(0)\n    this.animateColor = new Animated.Value(1)\n  }\n\n  componentDidUpdate(prevProps) {\n    this.animateX()\n  }\n\n  animateX = () => {\n    this.translateXValue.setValue(0)\n    this.animateColor.setValue(0)\n    Animated.parallel([\n      Animated.spring(this.translateXValue, {\n        toValue: 5,\n        friction: 2,\n        useNativeDriver: true,\n        easing: Easing.linear\n      }),\n      Animated.timing(this.animateColor, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n        easing: Easing.linear\n      })\n    ]).start()\n  }\n\n  render() {\n    const {\n      navigation,\n      renderIcon,\n      onTabPress,\n      onTabLongPress,\n      activeBackgroundColor,\n      activeTintColor,\n      inactiveTintColor,\n      numOfTabs,\n      tabBarHeight\n    } = this.props\n    const { routes, index: activeRouteIndex } = navigation.state\n    const { tabWidth, Scaler, windowWidth } = utils(numOfTabs)\n\n    return (\n      <View style={[styles.container, { backgroundColor: this.state.prevColor, height: tabBarHeight || 70 }]}>\n        {routes.map((route, routeIndex) => {\n          const isRouteActive = routeIndex === activeRouteIndex;\n          const tintColor = isRouteActive ? (activeTintColor || '#000000') : (inactiveTintColor || 'grey')\n\n          return (\n            <View style={{ justifyContent: \"center\", alignItems: \"center\" }} key={routeIndex}>\n              {isRouteActive &&\n                <Animated.View\n                  style={{\n                    borderRadius: 50,\n                    height: tabBarHeight || 70,\n                    zIndex: -1,\n                    width: windowWidth * 2,\n                    position: 'absolute',\n                    backgroundColor: this.state.containerColor,\n                    transform: [{ scaleX: this.animateColor }]\n                  }}\n                />\n              }\n              <TouchableOpacity\n                style={{ width: tabWidth, alignItems: 'center', justifyContent: \"center\" }}\n                onPress={() => {\n                  this.setState({ prevColor: this.state.containerColor })\n                  this.setState({ containerColor: activeBackgroundColor[route.key] })\n                  onTabPress({ route });\n                }}\n                onLongPress={() => {\n                  this.setState({ prevColor: this.state.containerColor })\n                  this.setState({ containerColor: activeBackgroundColor[route.key] })\n                  onTabLongPress({ route });\n                }}\n              >\n                <Scaler\n                  pose={isRouteActive ? \"active\" : \"inactive\"}\n                >\n                  <Animated.View style={isRouteActive && { transform: [{ translateX: this.translateXValue }] }}>\n                    {renderIcon({ route, focused: isRouteActive, tintColor })}\n                  </Animated.View>\n                </Scaler>\n              </TouchableOpacity>\n            </View>\n          )\n        })}\n      </View>\n    )\n  }\n}\n\nexport default ColorFillNavigationTab"],"mappings":"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"},"metadata":{},"sourceType":"module"}