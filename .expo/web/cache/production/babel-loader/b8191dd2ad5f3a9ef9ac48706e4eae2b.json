{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"name\",\"color\",\"size\",\"selectionColor\",\"onLayout\"],_excluded2=[\"state\",\"navigation\",\"descriptors\"],_excluded3=[\"onPress\",\"route\",\"accessibilityRole\",\"borderless\",\"centered\",\"rippleColor\",\"style\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{SafeAreaProviderCompat}from'@react-navigation/elements';import{CommonActions,Link,useLinkBuilder,useTheme}from'@react-navigation/native';import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import{BottomNavigation,DarkTheme,DefaultTheme}from'react-native-paper';import{useSafeAreaInsets}from'react-native-safe-area-context';var MaterialCommunityIcons;try{MaterialCommunityIcons=require(\"@expo/vector-icons/MaterialCommunityIcons\").default;}catch(e){var isErrorLogged=false;MaterialCommunityIcons=function MaterialCommunityIcons(_ref){var name=_ref.name,color=_ref.color,size=_ref.size,_0=_ref.selectionColor,_1=_ref.onLayout,rest=_objectWithoutProperties(_ref,_excluded);if(!isErrorLogged){if(!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)){console.error(e);}console.warn(\"Tried to use the icon '\"+name+\"' in a component from '@react-navigation/material-bottom-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.\",\"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://reactnavigation.org/docs/material-bottom-tab-navigator/#tabbaricon.\");isErrorLogged=true;}return React.createElement(Text,_extends({},rest,{style:[styles.icon,{color:typeof color!=='number'?color:undefined,fontSize:size}]}),\"\\u25A1\");};}function MaterialBottomTabViewInner(_ref2){var state=_ref2.state,navigation=_ref2.navigation,descriptors=_ref2.descriptors,rest=_objectWithoutProperties(_ref2,_excluded2);var insets=useSafeAreaInsets();var _useTheme=useTheme(),dark=_useTheme.dark,colors=_useTheme.colors;var buildLink=useLinkBuilder();var theme=React.useMemo(function(){var t=dark?DarkTheme:DefaultTheme;return _objectSpread(_objectSpread({},t),{},{colors:_objectSpread(_objectSpread(_objectSpread({},t.colors),colors),{},{surface:colors.card})});},[colors,dark]);return React.createElement(BottomNavigation,_extends({},rest,{theme:theme,navigationState:state,onIndexChange:function onIndexChange(index){return navigation.dispatch(_objectSpread(_objectSpread({},CommonActions.navigate({name:state.routes[index].name,merge:true})),{},{target:state.key}));},renderScene:function renderScene(_ref3){var route=_ref3.route;return descriptors[route.key].render();},renderTouchable:Platform.OS==='web'?function(_ref4){var _onPress=_ref4.onPress,route=_ref4.route,_0=_ref4.accessibilityRole,_1=_ref4.borderless,_2=_ref4.centered,_3=_ref4.rippleColor,style=_ref4.style,rest=_objectWithoutProperties(_ref4,_excluded3);return React.createElement(Link,_extends({},rest,{to:buildLink(route.name,route.params),accessibilityRole:\"link\",onPress:function onPress(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&(e.button==null||e.button===0)){e.preventDefault();_onPress===null||_onPress===void 0?void 0:_onPress(e);}},style:[styles.touchable,style]}));}:undefined,renderIcon:function renderIcon(_ref5){var route=_ref5.route,focused=_ref5.focused,color=_ref5.color;var options=descriptors[route.key].options;if(typeof options.tabBarIcon==='string'){return React.createElement(MaterialCommunityIcons,{name:options.tabBarIcon,color:color,size:24,style:styles.icon});}if(typeof options.tabBarIcon==='function'){return options.tabBarIcon({focused:focused,color:color});}return null;},getLabelText:function getLabelText(_ref6){var route=_ref6.route;var options=descriptors[route.key].options;return options.tabBarLabel!==undefined?options.tabBarLabel:options.title!==undefined?options.title:route.name;},getColor:function getColor(_ref7){var route=_ref7.route;return descriptors[route.key].options.tabBarColor;},getBadge:function getBadge(_ref8){var route=_ref8.route;return descriptors[route.key].options.tabBarBadge;},getAccessibilityLabel:function getAccessibilityLabel(_ref9){var route=_ref9.route;return descriptors[route.key].options.tabBarAccessibilityLabel;},getTestID:function getTestID(_ref10){var route=_ref10.route;return descriptors[route.key].options.tabBarTestID;},onTabPress:function onTabPress(_ref11){var route=_ref11.route,preventDefault=_ref11.preventDefault;var event=navigation.emit({type:'tabPress',target:route.key,canPreventDefault:true});if(event.defaultPrevented){preventDefault();}},safeAreaInsets:insets}));}export default function MaterialBottomTabView(props){return React.createElement(SafeAreaProviderCompat,null,React.createElement(MaterialBottomTabViewInner,props));}var styles=StyleSheet.create({icon:{backgroundColor:'transparent'},touchable:{display:'flex',justifyContent:'center'}});","map":{"version":3,"sources":["MaterialBottomTabView.tsx"],"names":["MaterialCommunityIcons","require","isErrorLogged","selectionColor","onLayout","rest","e","console","styles","color","fontSize","size","insets","useSafeAreaInsets","colors","useTheme","buildLink","useLinkBuilder","theme","t","dark","surface","card","index","name","state","merge","target","key","route","descriptors","accessibilityRole","borderless","centered","rippleColor","onPress","options","icon","focused","preventDefault","event","type","canPreventDefault","backgroundColor","touchable","display","justifyContent"],"mappings":"u4CAAA,OAAA,sBAAA,KAAA,4BAAA,CACA,OAAA,aAAA,CAAA,IAAA,CAAA,cAAA,CAAA,QAAA,KAAA,0BAAA,CASA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,mLAEA,OAAA,gBAAA,CAAA,SAAA,CAAA,YAAA,KAAA,oBAAA,CACA,OAAA,iBAAA,KAAA,gCAAA,CAkBA,GAAA,CAAA,sBAAA,CAMA,GAAI,CAEFA,sBAAsB,CACpBC,OAAAA,6CAAAA,CADFD,OAAAA,CAFF,CAIE,MAAA,CAAA,CAAe,CACf,GAAIE,CAAAA,aAAa,CADF,KACf,CAGAF,sBAAsB,CAAG,gCAAA,IAAA,CAOnB,CAPoB,GAAA,CAAA,IAAA,CAOpB,IAPoB,CAAA,IAAA,CAAA,KAAA,CAOpB,IAPoB,CAAA,KAAA,CAAA,IAAA,CAOpB,IAPoB,CAAA,IAAA,CAAA,EAAA,CAOpB,IAPoB,CAIxBG,cAJwB,CAAA,EAAA,CAOpB,IAPoB,CAKxBC,QALwB,CAMrBC,IANqB,0BAOpB,IAPoB,YAQxB,GAAI,CAAJ,aAAA,CAAoB,CAClB,GACE,CAAC,8DAAA,IAAA,CACCC,CAAC,CAFL,OACG,CADH,CAIE,CACAC,OAAO,CAAPA,KAAAA,CAAAA,CAAAA,EACD,CAEDA,OAAO,CAAPA,IAAAA,2BAAAA,IAAAA,wUAKAL,aAAa,CAAbA,IAAAA,CACD,CAED,MAEE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAAE,CACLM,MAAM,CADD,IAAA,CAEL,CACEC,KAAK,CAAE,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,KAAA,CADT,SAAA,CAEEC,QAAQ,CAAEC,IAFZ,CAFK,CAFT,CAAA,CAAA,CAAA,QAAA,CAFF,CAzBFX,CAAAA,CAyCD,CAED,QAAA,CAAA,0BAAA,CAAA,KAAA,CAKU,CAL0B,GAAA,CAAA,KAAA,CAK1B,KAL0B,CAAA,KAAA,CAAA,UAAA,CAK1B,KAL0B,CAAA,UAAA,CAAA,WAAA,CAK1B,KAL0B,CAAA,WAAA,CAI/BK,IAJ+B,0BAK1B,KAL0B,aAMlC,GAAMO,CAAAA,MAAM,CAAGC,iBAAf,EAAA,CACA,cAAyBE,QAAzB,EAAA,CAAM,IAAN,WAAM,IAAN,CAAcD,MAAd,WAAcA,MAAd,CACA,GAAME,CAAAA,SAAS,CAAGC,cAAlB,EAAA,CAEA,GAAMC,CAAAA,KAAK,CAAG,KAAK,CAAL,OAAA,CAAc,UAAM,CAChC,GAAMC,CAAAA,CAAC,CAAGC,IAAI,CAAA,SAAA,CAAd,YAAA,CAEA,sCAAO,CAAP,MAEEN,MAAM,8CACDK,CAAC,CADE,MAAF,EAAE,MAAF,MAGJE,OAAO,CAAEP,MAAM,CAACQ,IAHZ,EAFR,GAHY,CAAA,CAWX,CAAA,MAAA,CAXH,IAWG,CAXW,CAAd,CAaA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAFP,KAAA,CAGE,eAAe,CAHjB,KAAA,CAIE,aAAa,CAAGC,uBAAAA,KAAD,QACb,CAAA,UAAU,CAAV,QAAA,gCACK,aAAa,CAAb,QAAA,CAAuB,CACxBC,IAAI,CAAEC,KAAK,CAALA,MAAAA,CAAAA,KAAAA,EADkB,IAAA,CAExBC,KAAK,CAAE,IAFiB,CAAvB,CADL,MAKEC,MAAM,CAAEF,KAAK,CAACG,GALhB,GADa,EAJjB,CAaE,WAAW,CAAE,qBAAA,KAAA,CAAA,CAAA,GAAGC,CAAAA,KAAH,CAAA,KAAA,CAAGA,KAAH,CAAA,MAAeC,CAAAA,WAAW,CAACD,KAAK,CAAjBC,GAAW,CAAXA,CAAf,MAAeA,EAAf,CAbf,CAAA,CAcE,eAAe,CACb,QAAQ,CAAR,EAAA,GAAA,KAAA,CACI,SAAA,KAAA,CASM,CATL,GAAA,CAAA,QAAA,CASK,KATL,CAAA,OAAA,CAAA,KAAA,CASK,KATL,CAAA,KAAA,CAAA,EAAA,CASK,KATL,CAGCC,iBAHD,CAAA,EAAA,CASK,KATL,CAICC,UAJD,CAAA,EAAA,CASK,KATL,CAKCC,QALD,CAAA,EAAA,CASK,KATL,CAMCC,WAND,CAAA,KAAA,CASK,KATL,CAAA,KAAA,CAQI7B,IARJ,0BASK,KATL,aAUC,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAGE,EAAE,CAAEW,SAAS,CAACa,KAAK,CAAN,IAAA,CAAaA,KAAK,CAHjC,MAGe,CAHf,CAIE,iBAAiB,CAJnB,MAAA,CAKE,OAAO,CAAGvB,iBAAAA,CAAD,CAAY,CACnB,GACE,EAAEA,CAAC,CAADA,OAAAA,EAAaA,CAAC,CAAdA,MAAAA,EAAyBA,CAAC,CAA1BA,OAAAA,EAAsCA,CAAC,CAAzC,QAAA,IACCA,CAAC,CAADA,MAAAA,EAAAA,IAAAA,EAAoBA,CAAC,CAADA,MAAAA,GAFvB,CACE,CADF,CAGE,CACAA,CAAC,CAADA,cAAAA,GACA6B,QAAO,GAAPA,IAAAA,EAAAA,QAAO,GAAA,IAAPA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,QAAO,CAAPA,CAAO,CAAPA,CACD,CAZL,CAAA,CAcE,KAAK,CAAE,CAAC3B,MAAM,CAAP,SAAA,CAAA,KAAA,CAdT,CAAA,CAAA,CADF,CAXN,CAAA,CAfJ,SAAA,CA+CE,UAAU,CAAE,oBAAA,KAAA,CAA+B,CAA9B,GAAA,CAAA,KAAA,CAA8B,KAA9B,CAAA,KAAA,CAAA,OAAA,CAA8B,KAA9B,CAAA,OAAA,CAAkBC,KAAlB,CAA8B,KAA9B,CAAkBA,KAAlB,CACX,GAAQ2B,CAAAA,OAAR,CAAoBN,WAAW,CAACD,KAAK,CAArC,GAA+B,CAA/B,CAAQO,OAAR,CAEA,GAAI,MAAOA,CAAAA,OAAO,CAAd,UAAA,GAAJ,QAAA,CAA4C,CAC1C,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,sBAAA,CAAA,CACE,IAAI,CAAEA,OAAO,CADf,UAAA,CAEE,KAAK,CAFP,KAAA,CAGE,IAAI,CAHN,EAAA,CAIE,KAAK,CAAE5B,MAAM,CAAC6B,IAJhB,CAAA,CADF,CAQD,CAED,GAAI,MAAOD,CAAAA,OAAO,CAAd,UAAA,GAAJ,UAAA,CAA8C,CAC5C,MAAO,CAAA,OAAO,CAAP,UAAA,CAAmB,CAAEE,OAAF,CAAEA,OAAF,CAAW7B,KAAAA,CAAAA,KAAX,CAAnB,CAAP,CACD,CAED,MAAA,KAAA,CAjEJ,CAAA,CAmEE,YAAY,CAAE,sBAAA,KAAA,CAAsB,CAArB,GAAEoB,CAAAA,KAAF,CAAqB,KAArB,CAAEA,KAAF,CACb,GAAQO,CAAAA,OAAR,CAAoBN,WAAW,CAACD,KAAK,CAArC,GAA+B,CAA/B,CAAQO,OAAR,CAEA,MAAOA,CAAAA,OAAO,CAAPA,WAAAA,GAAAA,SAAAA,CACHA,OAAO,CADJA,WAAAA,CAEHA,OAAO,CAAPA,KAAAA,GAAAA,SAAAA,CACAA,OAAO,CADPA,KAAAA,CAECP,KAAD,CAJJ,IAAA,CAtEJ,CAAA,CA4EE,QAAQ,CAAE,kBAAA,KAAA,CAAA,CAAA,GAAGA,CAAAA,KAAH,CAAA,KAAA,CAAGA,KAAH,CAAA,MAAeC,CAAAA,WAAW,CAACD,KAAK,CAAjBC,GAAW,CAAXA,CAAAA,OAAAA,CAAf,WAAA,CA5EZ,CAAA,CA6EE,QAAQ,CAAE,kBAAA,KAAA,CAAA,CAAA,GAAGD,CAAAA,KAAH,CAAA,KAAA,CAAGA,KAAH,CAAA,MAAeC,CAAAA,WAAW,CAACD,KAAK,CAAjBC,GAAW,CAAXA,CAAAA,OAAAA,CAAf,WAAA,CA7EZ,CAAA,CA8EE,qBAAqB,CAAE,+BAAA,KAAA,CAAA,CAAA,GAAGD,CAAAA,KAAH,CAAA,KAAA,CAAGA,KAAH,CAAA,MACrBC,CAAAA,WAAW,CAACD,KAAK,CAAjBC,GAAW,CAAXA,CAAAA,OAAAA,CADqB,wBAAA,CA9EzB,CAAA,CAiFE,SAAS,CAAE,mBAAA,MAAA,CAAA,CAAA,GAAGD,CAAAA,KAAH,CAAA,MAAA,CAAGA,KAAH,CAAA,MAAeC,CAAAA,WAAW,CAACD,KAAK,CAAjBC,GAAW,CAAXA,CAAAA,OAAAA,CAAf,YAAA,CAjFb,CAAA,CAkFE,UAAU,CAAE,oBAAA,MAAA,CAA+B,CAA9B,GAAA,CAAA,KAAA,CAA8B,MAA9B,CAAA,KAAA,CAASS,cAAT,CAA8B,MAA9B,CAASA,cAAT,CACX,GAAMC,CAAAA,KAAK,CAAG,UAAU,CAAV,IAAA,CAAgB,CAC5BC,IAAI,CADwB,UAAA,CAE5Bd,MAAM,CAAEE,KAAK,CAFe,GAAA,CAG5Ba,iBAAiB,CAAE,IAHS,CAAhB,CAAd,CAMA,GAAIF,KAAK,CAAT,gBAAA,CAA4B,CAC1BD,cAAc,GACf,CA3FL,CAAA,CA6FE,cAAc,CAAE3B,MA7FlB,CAAA,CAAA,CADF,CAiGD,CAED,cAAe,SAAA,CAAA,qBAAA,CAAA,KAAA,CAA6C,CAC1D,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,sBAAA,CAAA,IAAA,CACE,KAAA,CAAA,aAAA,CAAA,0BAAA,CAFJ,KAEI,CADF,CADF,CAKD,CAED,GAAMJ,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/B6B,IAAI,CAAE,CACJM,eAAe,CAAE,aADb,CADyB,CAI/BC,SAAS,CAAE,CACTC,OAAO,CADE,MAAA,CAETC,cAAc,CAAE,QAFP,CAJoB,CAAlB,CAAf","sourcesContent":["import { SafeAreaProviderCompat } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  Link,\n  ParamListBase,\n  Route,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, Text } from 'react-native';\nimport { BottomNavigation, DarkTheme, DefaultTheme } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type {\n  MaterialBottomTabDescriptorMap,\n  MaterialBottomTabNavigationConfig,\n  MaterialBottomTabNavigationHelpers,\n} from '../types';\n\ntype Props = MaterialBottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: MaterialBottomTabNavigationHelpers;\n  descriptors: MaterialBottomTabDescriptorMap;\n};\n\ntype Scene = { route: { key: string } };\n\n// Optionally require vector-icons referenced from react-native-paper:\n// https://github.com/callstack/react-native-paper/blob/4b26429c49053eaa4c3e0fae208639e01093fa87/src/components/MaterialCommunityIcon.tsx#L14\nlet MaterialCommunityIcons: React.ComponentType<\n  React.ComponentProps<\n    typeof import('react-native-vector-icons/MaterialCommunityIcons').default\n  >\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e: any) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({\n    name,\n    color,\n    size,\n    selectionColor: _0,\n    onLayout: _1,\n    ...rest\n  }) => {\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from '@react-navigation/material-bottom-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://reactnavigation.org/docs/material-bottom-tab-navigator/#tabbaricon.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      // @ts-expect-error: we're passing icon props to text, but we don't care about it since it's just fallback\n      <Text\n        {...rest}\n        style={[\n          styles.icon,\n          {\n            color: typeof color !== 'number' ? color : undefined,\n            fontSize: size,\n          },\n        ]}\n      >\n        □\n      </Text>\n    );\n  };\n}\n\nfunction MaterialBottomTabViewInner({\n  state,\n  navigation,\n  descriptors,\n  ...rest\n}: Props) {\n  const insets = useSafeAreaInsets();\n  const { dark, colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const theme = React.useMemo(() => {\n    const t = dark ? DarkTheme : DefaultTheme;\n\n    return {\n      ...t,\n      colors: {\n        ...t.colors,\n        ...colors,\n        surface: colors.card,\n      },\n    };\n  }, [colors, dark]);\n\n  return (\n    <BottomNavigation\n      {...rest}\n      theme={theme}\n      navigationState={state}\n      onIndexChange={(index: number) =>\n        navigation.dispatch({\n          ...CommonActions.navigate({\n            name: state.routes[index].name,\n            merge: true,\n          }),\n          target: state.key,\n        })\n      }\n      renderScene={({ route }) => descriptors[route.key].render()}\n      renderTouchable={\n        Platform.OS === 'web'\n          ? ({\n              onPress,\n              route,\n              accessibilityRole: _0,\n              borderless: _1,\n              centered: _2,\n              rippleColor: _3,\n              style,\n              ...rest\n            }) => {\n              return (\n                <Link\n                  {...rest}\n                  // @ts-expect-error: to could be undefined, but it doesn't affect functionality\n                  to={buildLink(route.name, route.params)}\n                  accessibilityRole=\"link\"\n                  onPress={(e: any) => {\n                    if (\n                      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n                      (e.button == null || e.button === 0) // ignore everything but left clicks\n                    ) {\n                      e.preventDefault();\n                      onPress?.(e);\n                    }\n                  }}\n                  style={[styles.touchable, style]}\n                />\n              );\n            }\n          : undefined\n      }\n      renderIcon={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (typeof options.tabBarIcon === 'string') {\n          return (\n            <MaterialCommunityIcons\n              name={options.tabBarIcon}\n              color={color}\n              size={24}\n              style={styles.icon}\n            />\n          );\n        }\n\n        if (typeof options.tabBarIcon === 'function') {\n          return options.tabBarIcon({ focused, color });\n        }\n\n        return null;\n      }}\n      getLabelText={({ route }: Scene) => {\n        const { options } = descriptors[route.key];\n\n        return options.tabBarLabel !== undefined\n          ? options.tabBarLabel\n          : options.title !== undefined\n          ? options.title\n          : (route as Route<string>).name;\n      }}\n      getColor={({ route }) => descriptors[route.key].options.tabBarColor}\n      getBadge={({ route }) => descriptors[route.key].options.tabBarBadge}\n      getAccessibilityLabel={({ route }) =>\n        descriptors[route.key].options.tabBarAccessibilityLabel\n      }\n      getTestID={({ route }) => descriptors[route.key].options.tabBarTestID}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        }\n      }}\n      safeAreaInsets={insets}\n    />\n  );\n}\n\nexport default function MaterialBottomTabView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <MaterialBottomTabViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n  touchable: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}